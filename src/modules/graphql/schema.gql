# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  content: String!
  createdAt: DateTime!
  id: ID!
  post: Post!
  updatedAt: DateTime!
  user: User!
}

input CreateUserDto {
  avatar: String
  bio: String
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input ForgotPasswordDto {
  email: String!
}

type JwtPayload {
  name: String!
}

type Like {
  createdAt: DateTime!
  id: ID!
  post: Post!
  updatedAt: DateTime!
  user: User!
}

type Mutation {
  """Create a new user"""
  createUser(createUserDto: CreateUserDto!): User!

  """Forgot password"""
  forgotPassword(forgotPasswordDto: ForgotPasswordDto!): String!

  """Reset password"""
  resetPassword(newPasswordDto: NewPasswordDto!): String!

  """Sign in a user"""
  signIn(signInDto: SignInDto!): JwtPayload!

  """Sign out a user"""
  signOut: Boolean!
}

input NewPasswordDto {
  """Confirm new password"""
  confirmPassword: String!

  """New password"""
  password: String!

  """Reset password token"""
  token: String!
}

type Post {
  comments: [Comment!]!
  content: String!
  createdAt: DateTime!
  id: ID!
  likes: [Like!]!
  published: Boolean!
  slug: String!
  tags: [Tag!]!
  thumbnail: String
  title: String!
  updatedAt: DateTime!
  user: User!
}

type Query {
  comments: [Comment!]!
  likes: [Like!]!

  """Get current user info"""
  me: UserModel!

  """Retrieve all posts"""
  posts: [Post!]!
  tags: [Tag!]!

  """Retrieve a list of all users"""
  users: [User!]!
}

input SignInDto {
  """Email"""
  email: String!
  password: String!
}

type Tag {
  createdAt: DateTime!
  id: ID!
  name: String!
  posts: [Post!]!
  updatedAt: DateTime!
}

type User {
  avatar: String
  bio: String
  comments: [Comment!]!
  createdAt: DateTime!
  email: String!
  id: ID!
  likes: [Like!]!
  name: String!
  posts: [Post!]!
  updatedAt: DateTime!
}

type UserModel {
  avatar: String
  email: String!
  id: String!
  name: String!
  role: String!
}